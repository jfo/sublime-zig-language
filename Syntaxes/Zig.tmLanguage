<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>zig</string>
	</array>
	<key>name</key>
	<string>Zig</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#storage</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#structure</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#statement</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#async-control</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#conditional</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#repeat</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type-int</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type-c</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolean</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dec-float-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#hex-float-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dec-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#hex-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#oct-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#bin-number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#character</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-line-doc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#multiline-strings</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>async-control</key>
		<dict>
			<key>match</key>
			<string>\b(async|await|suspend|resume|cancel)\b</string>
			<key>name</key>
			<string>keyword.control.async.zig</string>
		</dict>
		<key>bin-number</key>
		<dict>
			<key>match</key>
			<string>0b[01]+</string>
			<key>name</key>
			<string>constant.numeric.bin.zig</string>
		</dict>
		<key>boolean</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.zig</string>
		</dict>
		<key>comment-line</key>
		<dict>
			<key>begin</key>
			<string>//[^/]</string>
			<key>end</key>
			<string>$
?</string>
			<key>name</key>
			<string>comment.line.zig</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#todo</string>
				</dict>
			</array>
		</dict>
		<key>comment-line-doc</key>
		<dict>
			<key>begin</key>
			<string>///</string>
			<key>end</key>
			<string>$
?</string>
			<key>name</key>
			<string>comment.line.documentation.zig</string>
		</dict>
		<key>conditional</key>
		<dict>
			<key>match</key>
			<string>\b(if|else|switch|and|or)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.zig</string>
		</dict>
		<key>constant</key>
		<dict>
			<key>match</key>
			<string>\b(null|undefined|this)\b</string>
			<key>name</key>
			<string>constant.language.zig</string>
		</dict>
		<key>dec-float-number</key>
		<dict>
			<key>match</key>
			<string>\b-?[0-9]+(\.[0-9]+)?([eE][+-]?[0-9]+)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.zig</string>
		</dict>
		<key>dec-number</key>
		<dict>
			<key>match</key>
			<string>\b-?[0-9]+\b</string>
			<key>name</key>
			<string>constant.numeric.integer.zig</string>
		</dict>
		<key>hex-float-number</key>
		<dict>
			<key>match</key>
			<string>\b0x[a-fA-F0-9]+(\.[a-fA-F0-9]+)?([pP][+-]?[0-9]+)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.hex.zig</string>
		</dict>
		<key>hex-number</key>
		<dict>
			<key>match</key>
			<string>\b0x[a-fA-F0-9]+\b</string>
			<key>name</key>
			<string>constant.numeric.hex.zig</string>
		</dict>
		<key>keyword</key>
		<dict>
			<key>match</key>
			<string>b(fn|use|test|addWithOverflow|ArgType|atomicRmw|bitCast|breakpoint|alignCast|alignOf|cDefine|cImport|cInclude|cUndef|cImplicitCast|clz|cmpxchg|compileError|compileLog|ctz|divExtract|divFloor|divTrunc|embedFile|export|tagName|TagType|errorName|errorReturnTrace|fence|fieldParentPtr|frameAddress|inlineCall|intToPtr|intType|maxValue|memberCount|memberName|memberType|memcpy|memset|minValue|mod|mulWithOverflow|noInlineCall|offsetOf|OpaqueType|panic|ptrCast|ptrToInt|rem|returnAddress|setAlignStack|setCold|setRuntimeSafety|setEvalBranchQuota|setFloatMode|setGLobalLinkage|setGlobalSection|shlExact|shlWithOverflow|shrExact|sizeOf|subWithOverflow|truncate|typeId|typeName|typeOf|import|typeOf)\b</string>
			<key>name</key>
			<string>support.function.zig</string>
		</dict>
		<key>multiline-strings</key>
		<dict>
			<key>begin</key>
			<string>c?\\\\</string>
			<key>contentName</key>
			<string>string.quoted.other.zig</string>
			<key>end</key>
			<string>$\n?</string>
		</dict>
		<key>oct-number</key>
		<dict>
			<key>match</key>
			<string>\b0o[0-7]+\b</string>
			<key>name</key>
			<string>constant.numeric.octal.zig</string>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(==|!=)</string>
					<key>name</key>
					<string>keyword.operator.zig</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(and|or)\b</string>
					<key>name</key>
					<string>keyword.operator.word.zig</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\%?|\+%?|\*%?|/[^/]|%)=?</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.zig</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\&lt;\&lt;%?|&gt;&gt;|!|&amp;|\^|\|)=?</string>
					<key>name</key>
					<string>keyword.operator.bitwise.zig</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(==|\+\+|\*\*)</string>
					<key>name</key>
					<string>keyword.operator.special.zig</string>
				</dict>
			</array>
		</dict>
		<key>repeat</key>
		<dict>
			<key>match</key>
			<string>\b(while|for)\b</string>
			<key>name</key>
			<string>keyword.control.zig</string>
		</dict>
		<key>statement</key>
		<dict>
			<key>match</key>
			<string>\b(break|return|continue|asm|defer|errdefer|unreachable)\b</string>
			<key>name</key>
			<string>keyword.control.zig</string>
		</dict>
		<key>storage</key>
		<dict>
			<key>match</key>
			<string>\b(const|var|extern|packed|export|pub|noalias|try|inline|comptime|nakedcc|stdcallcc|volatile|align|section)\b</string>
			<key>name</key>
			<string>storage.zig</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>begin</key>
			<string>(c"|"|')</string>
			<key>end</key>
			<string>"|'</string>
			<key>name</key>
			<string>string.quoted.double.zig</string>
		</dict>
		<key>structure</key>
		<dict>
			<key>match</key>
			<string>\b(union|struct|enum)\b</string>
			<key>name</key>
			<string>storage.type.zig</string>
		</dict>
		<key>todo</key>
		<dict>
			<key>match</key>
			<string>TODO</string>
			<key>name</key>
			<string>comment.line.todo.zig</string>
		</dict>
		<key>type</key>
		<dict>
			<key>match</key>
			<string>\b(bool|f32|f64|f128|void|noreturn|type|error|promise)\b</string>
			<key>name</key>
			<string>storage.type.zig</string>
		</dict>
		<key>type-c</key>
		<dict>
			<key>match</key>
			<string>\b(c_short|c_ushort|c_int|c_uint|c_long|c_ulong|c_longlong|c_ulonglong|c_longdouble|c_void)\b</string>
			<key>name</key>
			<string>storage.type.zig.c_compat</string>
		</dict>
		<key>type-int</key>
		<dict>
			<key>match</key>
			<string>\b(i2|u2|i3|u3|i4|u4|i5|u5|i6|u6|i7|u7|i8|u8|i16|u16|u29|i29|i32|u32|i64|u64|i128|u128|isize|usize)\b</string>
			<key>name</key>
			<string>storage.type.zig.integer</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.zig</string>
</dict>
</plist>
